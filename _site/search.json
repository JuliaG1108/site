[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "site",
    "section": "",
    "text": "code\n\n\n\n\n\n\n\n\n\n\n\nJun 30, 2022\n\n\nJúlia Gualberto\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Sobre",
    "section": "",
    "text": "Meu nome é Júlia Gualberto, sou estudante de estatística e esse é meu blog."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Since this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/Genomas/genomas.html",
    "href": "posts/Genomas/genomas.html",
    "title": "Comparação de Genomas",
    "section": "",
    "text": "O DNA é uma molécula presente em todos os seres vivos, que é responsável por armazenar as caracterı́sticas hereditárias. Ela é composta por sequências de nucleotı́deos, que podem ser de quatro tipos: Adenina (A), Timina (T), Citosina (C) ou Guanina (G).\nNeste estudo de caso, queremos avaliar se estruturas com funções parecidas de organismos diferentes têm diferenças. Para isso vamos avaliar a quantidade de pares de nucleotı́deos.\nPara comparar as duas estruturas requere-se um mapa de calor (Heatmap) que permita realizar a comparação dos pares de nucleotı́deos. Comente sobre os resultados encontrados."
  },
  {
    "objectID": "posts/Genomas/teste.html",
    "href": "posts/Genomas/teste.html",
    "title": "Comparação de Genomas",
    "section": "",
    "text": "O DNA é uma molécula presente em todos os seres vivos, que é responsável por armazenar as caracterı́sticas hereditárias. Ela é composta por sequências de nucleotı́deos, que podem ser de quatro tipos: Adenina (A), Timina (T), Citosina (C) ou Guanina (G).\nNeste estudo de caso, queremos avaliar se estruturas com funções parecidas de organismos diferentes têm diferenças. Para isso vamos avaliar a quantidade de pares de nucleotı́deos.\nPara comparar as duas estruturas requere-se um mapa de calor (Heatmap) que permita realizar a comparação dos pares de nucleotı́deos. Comente sobre os resultados encontrados.\n\n\nInfluenza\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\ninfluenza = open('sequence-influenza.txt').read() # Ler o arquivo\n\ninfluenza = influenza.replace(\"\\n\",\"\") # retirar os \"\\n\"\npares_influenza = [\n    influenza[i] + influenza[i + 1] for i in range(len(influenza) - 1)\n]\n\n\nfrom itertools import permutations\n\ngenes = ['A', 'T', 'C', 'G']\n\ncombinations_genes = list(permutations(genes, 2))\n\n\ntodos_genes = [''.join(i) for i in combinations_genes]\ntodos_genes.extend(['AA', 'TT', 'CC', 'GG'])\n\n# dicionario\ngenes_dict = {i:pares_influenza.count(i) for i in todos_genes}\n\n# colocar em ordem\nordered_dict = sorted(genes_dict.items(), key=lambda x: x[0], reverse=False)\n\nordered_dict = {i[0]:i[1] for i in ordered_dict}\n\n# matriz\nmatriz_influenza = np.array(list(ordered_dict.values())).reshape(4,4)\n\n\n\nplt.imshow(matriz_influenza, cmap = 'Blues', origin=\"lower\")\nplt.xlabel('Índice da linha'); plt.ylabel('Índice da coluna')\nplt.xticks((0,1,2,3),['A','C', 'G', 'T'])\n\n([<matplotlib.axis.XTick object at 0x1C8045C8>, <matplotlib.axis.XTick object at 0x1C8045B0>, <matplotlib.axis.XTick object at 0x1C804148>, <matplotlib.axis.XTick object at 0x1C83FB50>], [Text(0, 0, 'A'), Text(1, 0, 'C'), Text(2, 0, 'G'), Text(3, 0, 'T')])\n\nplt.yticks([0,1,2,3],['A', \"C\", \"G\", \"T\"])\n\n([<matplotlib.axis.YTick object at 0x1C804A18>, <matplotlib.axis.YTick object at 0x1C804988>, <matplotlib.axis.YTick object at 0x1C804130>, <matplotlib.axis.YTick object at 0x1C83FC88>], [Text(0, 0, 'A'), Text(0, 1, 'C'), Text(0, 2, 'G'), Text(0, 3, 'T')])\n\nplt.title(\"Influenza A\")\nplt.show()\n\n\n\n\n\n\nCovid\n\ncovid = open('sequence-covid.txt').read() # Ler o arquivo\n\ncovid = covid.replace(\"\\n\",\"\") # retirar os \"\\n\"\npares_covid = [\n    covid[i] + covid[i + 1] for i in range(len(covid) - 1)\n]\n\n\nfrom itertools import permutations\n\ngenes = ['A', 'T', 'C', 'G']\n\ncombinations_genes = list(permutations(genes, 2))\n\n\ntodos_genes = [''.join(i) for i in combinations_genes]\ntodos_genes.extend(['AA', 'TT', 'CC', 'GG'])\n\n# dicionario\ngenes_dict = {i:pares_covid.count(i) for i in todos_genes}\n\n# colocar em ordem\nordered_dict = sorted(genes_dict.items(), key=lambda x: x[0], reverse=False)\n\nordered_dict = {i[0]:i[1] for i in ordered_dict}\n\n# matriz\nmatriz_covid = np.array(list(ordered_dict.values())).reshape(4,4)\n\n\nimport matplotlib.pyplot as plt\n\nplt.imshow(matriz_influenza, cmap = 'Blues', origin=\"lower\")\nplt.xlabel('Índice da linha'); plt.ylabel('Índice da coluna')\nplt.xticks((0,1,2,3),['A','C', 'G', 'T'])\n\n([<matplotlib.axis.XTick object at 0x1D4DD850>, <matplotlib.axis.XTick object at 0x1D4DD868>, <matplotlib.axis.XTick object at 0x1D4DD0E8>, <matplotlib.axis.XTick object at 0x1D4EFE68>], [Text(0, 0, 'A'), Text(1, 0, 'C'), Text(2, 0, 'G'), Text(3, 0, 'T')])\n\nplt.yticks([0,1,2,3],['A', \"C\", \"G\", \"T\"])\n\n([<matplotlib.axis.YTick object at 0x1D4E1088>, <matplotlib.axis.YTick object at 0x1D4DDCA0>, <matplotlib.axis.YTick object at 0x1D3E2C10>, <matplotlib.axis.YTick object at 0x1D4EFCB8>], [Text(0, 0, 'A'), Text(0, 1, 'C'), Text(0, 2, 'G'), Text(0, 3, 'T')])\n\nplt.title(\"Covid\")\nplt.show()"
  }
]