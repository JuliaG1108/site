{
  "hash": "d33a3130cb522e3a134544cc05149201",
  "result": {
    "markdown": "---\ntitle: \"Webscraping no Wikipédia\"\nauthor: \"Júlia Gualberto\"\ndate: \"2022-07-19\"\ncategories: [code, analysis, python]\nimage: \"wikipedia.jpg\"\n---\n\n\n### Extraindo tabela de municípios do estado do Espírito Santo do site Wikipedia, ultilizando métodos de Webscraping.\n\n\n\n\n\n- **Acessando a página de interesse**\n\n\n::: {.cell}\n\n```{.python .cell-code}\n#!pip install bs4\n#!pip install requests\n\nfrom bs4 import BeautifulSoup\nimport pandas as pd\nimport requests\nurl = requests.get(\"https://pt.wikipedia.org/wiki/Lista_de_munic%C3%ADpios_do_Esp%C3%ADrito_Santo_por_popula%C3%A7%C3%A3o\")\n#print(url.status_code)\n```\n:::\n\n\n- **Armazenando o conteúdo HTML da página:**\n\n\n::: {.cell}\n\n```{.python .cell-code}\nconteudo = BeautifulSoup(url.content, 'html.parser')\n```\n:::\n\n\n- **Obtendo a tabela:**\n\n\n::: {.cell}\n\n```{.python .cell-code}\ntable = conteudo.find('table')\n```\n:::\n\n\n- **Extraindo os títulos das colunas:**\n\n\n::: {.cell}\n\n```{.python .cell-code}\ntitles = [i.text for i in table.find_all('th')]\n```\n:::\n\n\n\n- **Dataframe para armazenar a tabela**\n\n\n::: {.cell}\n\n```{.python .cell-code}\ndata = pd.DataFrame(columns = titles)\n```\n:::\n\n\n- **Preenchendo a tabela:**\n\n\n::: {.cell}\n\n```{.python .cell-code}\nfor j in table.find_all('tr')[1:]:\n    row_data = j.find_all('td')\n    row = [i.text for i in row_data]\n    length = len(data)\n    data.loc[length] = row\n```\n:::\n\n\n- **Tabela:**\n\n\n::: {.cell}\n\n```{.python .cell-code}\nprint(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Posição                 Município População\\n\n0        1                     Serra   527.240\\n\n1        2                Vila Velha   501.325\\n\n2        3                 Cariacica   383.917\\n\n3        4                   Vitória   365.855\\n\n4        5   Cachoeiro de Itapemirim   210.589\\n\n..     ...                       ...         ...\n73      74             Alto Rio Novo     7 836\\n\n74      75                    Apiacá     7 567\\n\n75      76        Dores do Rio Preto     6 749\\n\n76      77                  Mucurici     5 524\\n\n77      78    Divino de São Lourenço     4 304\\n\n\n[78 rows x 3 columns]\n```\n:::\n:::\n\n\n\n- **Limpando a tabela:**\n\n\n::: {.cell}\n\n```{.python .cell-code}\npopulacao = data['População\\n']\n\npopulacao1 = [i.split('\\n')[0].replace('\\xa0','.').split('[2]')[0] for i in populacao]\n\ndata['População\\n'] = populacao1\n\ndata = data.rename(columns={'População\\n': 'População'}) \n```\n:::\n\n\n- **Tabela Final:**\n\n\n::: {.cell}\n\n```{.python .cell-code}\nprint(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Posição                 Município População\n0        1                     Serra   527.240\n1        2                Vila Velha   501.325\n2        3                 Cariacica   383.917\n3        4                   Vitória   365.855\n4        5   Cachoeiro de Itapemirim   210.589\n..     ...                       ...       ...\n73      74             Alto Rio Novo     7 836\n74      75                    Apiacá     7 567\n75      76        Dores do Rio Preto     6 749\n76      77                  Mucurici     5 524\n77      78    Divino de São Lourenço     4 304\n\n[78 rows x 3 columns]\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}